render ejs page onchange event




<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0"/>
  <title>Doctors Profile</title>
  <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" rel="stylesheet" />
   <%- include("partials/template.ejs") %>
  <style>
   

    .container {
      position: relative;
      left: -400px;
      width: 800px;
      margin: 40px auto;
      background-color: #fff;
      border-radius: 10px;
      box-shadow: 0 5px 15px rgba(0,0,0,0.1);
      overflow: hidden;
    }

    .main {
      width: 50%;
      padding: 40px;
      
    }

    .section {
      position: relative;
      left: -25px;
      margin-bottom: 30px;
      width: 500px;
    }

    .section h3 {
      color: #2e3b4e;
      margin-bottom: 15px;
      border-bottom: 2px solid #eee;
      padding-bottom: 5px;
    }

    .info-item {
      margin-bottom: 10px;
    }

    .info-item span {
      font-weight: bold;
      display: inline-block;
      width: 150px;
    }

    #bookings {
        position: relative;
        left: 420px;
        top: -50px;
    }
  button.submit-btn {
  position: relative;
  background-color: #007BFF;       /* Bootstrap blue */
  right: -500px;
  color: white;
  padding: 12px 24px;
  border: none;
  border-radius: 15px;
  font-size: 16px;
  font-weight: 500;
  cursor: pointer;
  transition: background-color 0.3s ease, box-shadow 0.2s ease;
  box-shadow: 0 4px 6px rgba(0, 123, 255, 0.1);
  width: 200px;
}

button.submit-btn:hover {
  background-color: #0056b3;       /* Darker blue */
  box-shadow: 0 6px 10px rgba(0, 123, 255, 0.2);
}

.doctSchedul {
  position: relative;
  left: -445px;
}



  </style>
</head>
<body>

  <div class="container">
    <!-- Left Sidebar -->

    <!-- Main Content -->
  
    <div class="main">
      <div class="section">
        <% appointment.forEach(function(appointment){ %>
        
        <h1>Dr. <%= appointment.fname %></h1>
        
       
            <div class="info-item"><span>Speciality</span><%= appointment.speciality %></div>
            <div class="info-item"><span>Clinic  ID:</span> <%= appointment.clinics %></div>
            <div class="info-item"><span>Dr. ID:</span> <%= appointment.doctoreID %></div>
            <div class="info-item"><span>Email:</span><%= appointment.email %></div>
            <input type="hidden" name="doctoreID" value="<%= appointment.doctoreID %>" />

        <%  }); %>
      </div>


 <div id="bookings">
    <div class="card p-4">
      
      <div>
        <label class="form-label">Available Time Slots</label>
        <div id="slotContainer" class="d-flex flex-wrap"></div>
      </div>
    </div>

   
   
<input type="date" id="dateInput">
<input type="hidden" id="userID" value="<%= id %>"> <!-- Example userID -->


<form action="">
<!-- JavaScript -->
<script>
document.getElementById('dateInput').addEventListener('change', function () {
    const date = this.value;
    const userID = document.getElementById('userID').value;

    // Construct the query string
    const queryString = `?date=${encodeURIComponent(date)}&userID=${encodeURIComponent(userID)}`;

    // Send GET request
    fetch(`/your-route${queryString}`)
        .then(response => response.json())
        .then(data => {
            console.log('Server response:', data);
        })
        .catch(error => {
            console.error('Error:', error);
        });
});
</script>

  </form>  
</body>
</html>


=================================================================================================================================



// Your GET route
app.get('/your-route', (req, res) => {
    const { date, userID } = req.query;
    

     const sql = "SELECT * FROM doctors WHERE doctoreID = ?; select  time from availableDays where doctoreID = ? and date = ?";

        connection.query(sql, [userID,userID,date], function(err, results) {
        if (err) {
            console.error('Error executing multiple queries:', err);
            return;
        } else {

                  console.log('Result of first query:', results[0]);
                  console.log('Result of second query:', results[1]);
                  console.log(date);
        }       

         res.render('doctorsProfile.ejs', {appointment: results[0],data:results[1]});
       
    });
   
    
    
});
